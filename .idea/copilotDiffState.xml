<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Main.java" />
              <option name="originalContent" value="import essentiels.*;&#10;&#10;import java.util.*;&#10;&#10;public class Main{&#10;    public static void main(String[] args) {&#10;&#10;    }&#10;&#10;    public void runATM(Bank bank) {&#10;        System.out.println(&quot;Welcome to the ATM!&quot;);&#10;        System.out.println(&quot;# Please select an option:&quot;);&#10;        System.out.println(&quot;1. Create Account&quot;);&#10;        System.out.println(&quot;2. Access Account&quot;);&#10;        System.out.println(&quot;3. Exit&quot;);&#10;&#10;        Scanner scanner = new Scanner(System.in);&#10;        int choice = scanner.nextInt();&#10;&#10;        switch (choice) {&#10;            case 1:&#10;                System.out.println(&quot;Creating a new account...&quot;);&#10;                System.out.print(&quot;Enter your name: &quot;);&#10;                String name = scanner.next();&#10;                System.out.print(&quot;Enter your address: &quot;);&#10;                String address = scanner.next();&#10;                System.out.print(&quot;Enter your phone number: &quot;);&#10;                String phoneNumber = scanner.next();&#10;&#10;                Customer customer = new Customer(name, address, phoneNumber);&#10;                String accountNumber = UUID.randomUUID().toString();&#10;                Account newAccount = new Account(accountNumber, customer);&#10;&#10;                bank.addAccount(newAccount);&#10;                System.out.println(&quot;Account created successfully! Account Number: &quot; + accountNumber);&#10;                break;&#10;            case 2:&#10;                System.out.println(&quot;Please enter your account number:&quot;);&#10;                String inputAccountNumber = scanner.next();&#10;                Account account =&#10;                break;&#10;            case 3:&#10;                System.out.println(&quot;Exiting the ATM. Thank you!&quot;);&#10;                break;&#10;            default:&#10;                System.out.println(&quot;Invalid choice. Please try again.&quot;);&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="import essentiels.*;&#10;&#10;import java.util.*;&#10;&#10;public class Main{&#10;    public static void main(String[] args) {&#10;&#10;    }&#10;&#10;    public void runATM(Bank bank) {&#10;        System.out.println(&quot;Welcome to the ATM!&quot;);&#10;        System.out.println(&quot;# Please select an option:&quot;);&#10;        System.out.println(&quot;1. Create Account&quot;);&#10;        System.out.println(&quot;2. Access Account&quot;);&#10;        System.out.println(&quot;3. Exit&quot;);&#10;&#10;        Scanner scanner = new Scanner(System.in);&#10;        int choice = scanner.nextInt();&#10;&#10;        switch (choice) {&#10;            case 1:&#10;                System.out.println(&quot;Creating a new account...&quot;);&#10;                System.out.print(&quot;Enter your name: &quot;);&#10;                String name = scanner.next();&#10;                System.out.print(&quot;Enter your address: &quot;);&#10;                String address = scanner.next();&#10;                System.out.print(&quot;Enter your phone number: &quot;);&#10;                String phoneNumber = scanner.next();&#10;&#10;                Customer customer = new Customer(name, address, phoneNumber);&#10;                String accountNumber = UUID.randomUUID().toString();&#10;                Account newAccount = new Account(accountNumber, customer);&#10;                customer.addAccount(newAccount);&#10;                bank.addAccount(newAccount);&#10;                System.out.println(&quot;Account created successfully! Account Number: &quot; + accountNumber);&#10;                break;&#10;            case 2:&#10;                System.out.println(&quot;Please enter your account number:&quot;);&#10;                String inputAccountNumber = scanner.next();&#10;                Account account = bank.findAccountByNumber(inputAccountNumber);&#10;                if (account == null) {&#10;                    System.out.println(&quot;Account not found.&quot;);&#10;                    break;&#10;                }&#10;                boolean access = true;&#10;                while (access) {&#10;                    System.out.println(&quot;Account Menu:&quot;);&#10;                    System.out.println(&quot;1. Check Balance&quot;);&#10;                    System.out.println(&quot;2. Deposit&quot;);&#10;                    System.out.println(&quot;3. Withdraw&quot;);&#10;                    System.out.println(&quot;4. Exit&quot;);&#10;                    int accChoice = scanner.nextInt();&#10;                    switch (accChoice) {&#10;                        case 1:&#10;                            System.out.println(&quot;Balance: &quot; + account.getBalance());&#10;                            break;&#10;                        case 2:&#10;                            System.out.print(&quot;Enter amount to deposit: &quot;);&#10;                            double depAmount = scanner.nextDouble();&#10;                            account.deposit(depAmount);&#10;                            System.out.println(&quot;Deposited. New balance: &quot; + account.getBalance());&#10;                            break;&#10;                        case 3:&#10;                            System.out.print(&quot;Enter amount to withdraw: &quot;);&#10;                            double withAmount = scanner.nextDouble();&#10;                            if (account.withdraw(withAmount)) {&#10;                                System.out.println(&quot;Withdrawn. New balance: &quot; + account.getBalance());&#10;                            } else {&#10;                                System.out.println(&quot;Insufficient funds or invalid amount.&quot;);&#10;                            }&#10;                            break;&#10;                        case 4:&#10;                            access = false;&#10;                            break;&#10;                        default:&#10;                            System.out.println(&quot;Invalid choice. Try again.&quot;);&#10;                    }&#10;                }&#10;                break;&#10;            case 3:&#10;                System.out.println(&quot;Exiting the ATM. Thank you!&quot;);&#10;                break;&#10;            default:&#10;                System.out.println(&quot;Invalid choice. Please try again.&quot;);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/essentiels/Bank.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/essentiels/Bank.java" />
              <option name="originalContent" value="package essentiels;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class Bank {&#10;    private List&lt;Account&gt; accounts = new ArrayList&lt;Account&gt;();&#10;    private String name;&#10;    private Customer[] customers;&#10;&#10;    public List&lt;Account&gt; getAccounts() {&#10;        return this.accounts;&#10;    }&#10;&#10;    public void addAccount(Account account) {&#10;        if (account != null &amp;&amp; !this.getAccounts().contains(account)) {&#10;            this.accounts.add(account);&#10;        }&#10;    }&#10;&#10;    public void removeAccount(Account account) {&#10;        if (account != null &amp;&amp; this.getAccounts().contains(account)) {&#10;            this.accounts.remove(account);&#10;        }&#10;    }&#10;&#10;    public String getName() {&#10;        return this.name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public Bank (String name) {&#10;        this.setName(name);&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bank{&quot; +&#10;                &quot;accounts=&quot; + accounts +&#10;                &quot;, name='&quot; + name + '\'' +&#10;                '}';&#10;    }&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package essentiels;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class Bank {&#10;    private List&lt;Account&gt; accounts = new ArrayList&lt;Account&gt;();&#10;    private String name;&#10;    private Customer[] customers;&#10;&#10;    public List&lt;Account&gt; getAccounts() {&#10;        return this.accounts;&#10;    }&#10;&#10;    public void addAccount(Account account) {&#10;        if (account != null &amp;&amp; !this.getAccounts().contains(account)) {&#10;            this.accounts.add(account);&#10;        }&#10;    }&#10;&#10;    public void removeAccount(Account account) {&#10;        if (account != null &amp;&amp; this.getAccounts().contains(account)) {&#10;            this.accounts.remove(account);&#10;        }&#10;    }&#10;&#10;    public String getName() {&#10;        return this.name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public Bank (String name) {&#10;        this.setName(name);&#10;    }&#10;&#10;    public Account findAccountByNumber(String accountNumber) {&#10;        for (Account account : accounts) {&#10;            if (account.getAccountNumber().equals(accountNumber)) {&#10;                return account;&#10;            }&#10;        }&#10;        return null;&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Bank{&quot; +&#10;                &quot;accounts=&quot; + accounts +&#10;                &quot;, name='&quot; + name + '\'' +&#10;                '}';&#10;    }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/essentiels/Customer.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/essentiels/Customer.java" />
              <option name="originalContent" value="package essentiels;&#10;import java.util.*;&#10;&#10;public class Customer {&#10;    private String name;&#10;    private String address;&#10;    private String phoneNumber;&#10;    private List&lt;Account&gt; accounts;&#10;&#10;    public Customer(String name, String address, String phoneNumber) {&#10;        this.setName(name);&#10;        this.setAddress(address);&#10;        this.setPhoneNumber(phoneNumber);&#10;        this.accounts = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;&#10;    public String getPhoneNumber() {&#10;        return phoneNumber;&#10;    }&#10;&#10;    public void setPhoneNumber(String phoneNumber) {&#10;        this.phoneNumber = phoneNumber;&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Customer{&quot; +&#10;                &quot;name='&quot; + name + '\'' +&#10;                &quot;, address='&quot; + address + '\'' +&#10;                &quot;, phoneNumber='&quot; + phoneNumber + '\'' +&#10;                &quot;, accounts=&quot; + accounts +&#10;                '}';&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package essentiels;&#10;import java.util.*;&#10;&#10;public class Customer {&#10;    private String name;&#10;    private String address;&#10;    private String phoneNumber;&#10;    private List&lt;Account&gt; accounts;&#10;&#10;    public Customer(String name, String address, String phoneNumber) {&#10;        this.setName(name);&#10;        this.setAddress(address);&#10;        this.setPhoneNumber(phoneNumber);&#10;        this.accounts = new ArrayList&lt;&gt;();&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getAddress() {&#10;        return address;&#10;    }&#10;&#10;    public void setAddress(String address) {&#10;        this.address = address;&#10;    }&#10;&#10;    public String getPhoneNumber() {&#10;        return phoneNumber;&#10;    }&#10;&#10;    public void setPhoneNumber(String phoneNumber) {&#10;        this.phoneNumber = phoneNumber;&#10;    }&#10;&#10;    public void addAccount(Account account) {&#10;        if (account != null &amp;&amp; !accounts.contains(account)) {&#10;            accounts.add(account);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Customer{&quot; +&#10;                &quot;name='&quot; + name + '\'' +&#10;                &quot;, address='&quot; + address + '\'' +&#10;                &quot;, phoneNumber='&quot; + phoneNumber + '\'' +&#10;                &quot;, accounts=&quot; + accounts +&#10;                '}';&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/utils/SerializationUtil.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/utils/SerializationUtil.java" />
              <option name="originalContent" value="package utils;&#10;&#10;import essentials.Bank;&#10;import com.google.gson.Gson;&#10;import com.google.gson.GsonBuilder;&#10;import java.io.*;&#10;&#10;public class SerializationUtil {&#10;    private static final Gson gson = new GsonBuilder()&#10;            .setPrettyPrinting()&#10;            .create();&#10;&#10;    public static void saveBank(Bank bank, String filepath) throws IOException {&#10;        try (Writer writer = new FileWriter(filepath)) {&#10;            gson.toJson(bank, writer);&#10;        }&#10;    }&#10;&#10;    public static Bank loadBank(String filepath) throws IOException {&#10;        try (Reader reader = new FileReader(filepath)) {&#10;            return gson.fromJson(reader, Bank.class);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package utils;&#10;&#10;import essentials.Bank;&#10;import com.google.gson.Gson;&#10;import com.google.gson.GsonBuilder;&#10;import java.io.*;&#10;&#10;public class SerializationUtil {&#10;    private static final Gson gson = new GsonBuilder()&#10;            .setPrettyPrinting()&#10;            .create();&#10;    private static SerializationUtil instance;&#10;&#10;    private SerializationUtil() {}&#10;&#10;    public static SerializationUtil getInstance() {&#10;        if (instance == null) {&#10;            instance = new SerializationUtil();&#10;        }&#10;        return instance;&#10;    }&#10;&#10;    public void saveBank(Bank bank, String filepath) throws IOException {&#10;        try (Writer writer = new FileWriter(filepath)) {&#10;            gson.toJson(bank, writer);&#10;        }&#10;    }&#10;&#10;    public Bank loadBank(String filepath) throws IOException {&#10;        try (Reader reader = new FileReader(filepath)) {&#10;            return gson.fromJson(reader, Bank.class);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>